<?php

namespace SpsBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use SpsBundle\Entity\Standard;

/**
 * WloknoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WloknoRepository extends EntityRepository
{
	
	
	public function updateId_spaw_start($id_w,$id_f){
		
		if(!isset($id_f))
		{
			$id_f='null';
		}

		$qb = $this->getEntityManager()
			 ->createQuery("UPDATE SpsBundle:Wlokno w
								SET w.id_spaw_start=".$id_f."
			 					WHERE w.id =".$id_w);
		
		
		
		$w=$qb->getResult();
		return $w;
		
	}
	public function updateId_spaw_end($id_w,$id_f){
		
		
		if(!isset($id_f))
		{
			$id_f='null';
		}
		
		$qb = $this->getEntityManager()
		->createQuery("UPDATE SpsBundle:Wlokno w
								SET w.id_spaw_end=".$id_f."
			 					WHERE w.id =".$id_w);
		
		
		
		$w=$qb->getResult();
		return $w;
		
	}
	
	public function getFiberToSpaw($id_mufa,$id_kabel){
		

		$qb = $this->getEntityManager()
			 ->createQuery("
			 		SELECT w.id,
			 		
			 		(SELECT mq3.kod
					FROM SpsBundle:Wlokno wq3
					LEFT JOIN SpsBundle:Kabel kq3 with wq3.id_kabel=kq3.id
					LEFT JOIN SpsBundle:Mufa mq3 with kq3.id_mufa_end=mq3.id
					WHERE wq3.id=w.id) as kod,
			 		
			 		(SELECT mq4.kod
					FROM SpsBundle:Wlokno wq4
					LEFT JOIN SpsBundle:Kabel kq4 with wq4.id_kabel=kq4.id
					LEFT JOIN SpsBundle:Mufa mq4 with kq4.id_mufa_start=mq4.id
					WHERE wq4.id=w.id) as kodd
			 		
			 		
			 		FROM SpsBundle:Wlokno w
						LEFT JOIN SpsBundle:Kabel k  with k.id = w.id_kabel
						LEFT JOIN SpsBundle:Mufa m  with m.id = k.id_mufa_start 
			 			LEFT JOIN SpsBundle:Mufa mm  with mm.id = k.id_mufa_end 
			 		WHERE   
			 			(k.id_mufa_start =".$id_mufa."
			 			OR k.id_mufa_end =".$id_mufa.")
			 		AND
			 			(w.id_kabel!=".$id_kabel." )
			 		AND
			 			w.id  NOT IN 
			 				(SELECT 
						 		(SELECT wq.id FROM SpsBundle:Wlokno wq
						 		WHERE wq.id = w1.id_spaw_start) 
			 				FROM SpsBundle:Wlokno w1
							LEFT JOIN SpsBundle:Kabel k1  with k1.id = w1.id_kabel
			 				WHERE (k1.id_mufa_start = ".$id_mufa." OR k1.id_mufa_end =".$id_mufa.") 
			 				AND (w1.id_spaw_start !=-1 ))
			 		AND 
			 			w.id  NOT IN 
			 				(SELECT 
						 		(SELECT wq2.id FROM SpsBundle:Wlokno wq2
						 		WHERE wq2.id = w2.id_spaw_end) 
			 				FROM SpsBundle:Wlokno w2
							LEFT JOIN SpsBundle:Kabel k2  with k2.id = w2.id_kabel
			 				WHERE (k2.id_mufa_start = ".$id_mufa." OR k2.id_mufa_end =".$id_mufa.") 
			 				AND (w2.id_spaw_end !=-1 ))
			 		
			 		
			 		");
		
		
		$w=$qb->getResult();
		return $w;
	
	}
	
	public function getFiberStart($id_w,$id_mufa){
		
		$colorPos= $this->getNumberOfStandard($id_w);
	
		$qb = $this->getEntityManager()
		->createQuery(
				'SELECT
				k.id,k.producent,k.j,k.tubs,
					s.nazwa as standard,
				
					(SELECT count(ww.id)
					FROM SpsBundle:Wlokno ww
					LEFT JOIN SpsBundle:Kabel kk  with kk.id = ww.id_kabel
					WHERE kk.id =k.id
					AND ww.id<=:id_w) as w_pos,
				
					(SELECT sz2.nazwa'.$colorPos.'
					FROM SpsBundle:Wlokno wz2
					LEFT JOIN SpsBundle:Kabel kz2 with wz2.id_kabel=kz2.id
					LEFT JOIN SpsBundle:Standard sz2 with sz2=kz2.id_standard
					WHERE wz2.id=w.id) as s_nazwa ,
				
					(SELECT sz3.color'.$colorPos.'
					FROM SpsBundle:Wlokno wz3
					LEFT JOIN SpsBundle:Kabel kz3 with wz3.id_kabel=kz3.id
					LEFT JOIN SpsBundle:Standard sz3 with sz3=kz3.id_standard
					WHERE wz3.id=w.id) as s_color ,
	
					(SELECT wq3.id
					FROM SpsBundle:Wlokno wq3
					LEFT JOIN SpsBundle:Kabel kq3 with wq3.id_kabel=kq3.id
					LEFT JOIN SpsBundle:Mufa mq3 with kq3.id_mufa_start=mq3.id
					WHERE wq3.id=w.id) as od_id_w ,
	
	
					(SELECT m1.id
					FROM SpsBundle:Wlokno w1
					LEFT JOIN SpsBundle:Kabel k1 with w1.id_kabel=k1.id
					LEFT JOIN SpsBundle:Mufa m1 with k1.id_mufa_start=m1.id
					WHERE w1.id=w.id) as od_id,
	
					(SELECT m2.kod
					FROM SpsBundle:Wlokno w2
					LEFT JOIN SpsBundle:Kabel k2 with w2.id_kabel=k2.id
					LEFT JOIN SpsBundle:Mufa m2 with k2.id_mufa_start=m2.id
					WHERE w2.id=w.id) as od_kod,
	
					(SELECT k3.lenght
					FROM SpsBundle:Wlokno w3
					LEFT JOIN SpsBundle:Kabel k3 with w3.id_kabel=k3.id
					LEFT JOIN SpsBundle:Mufa m3 with k3.id_mufa_start=m3.id
					WHERE w3.id=w.id) as od_lenght ,
	
	
					(SELECT wq5.id
					FROM SpsBundle:Wlokno wq5
					LEFT JOIN SpsBundle:Kabel kq5 with wq5.id_kabel=kq5.id
					LEFT JOIN SpsBundle:Mufa mq5 with kq5.id_mufa_end=mq5.id
					WHERE wq5.id=w.id_spaw_end) as do_id_w,
	
	
					(SELECT m4.id
					FROM SpsBundle:Wlokno w4
					LEFT JOIN SpsBundle:Kabel k4 with w4.id_kabel=k4.id
					LEFT JOIN SpsBundle:Mufa m4 with k4.id_mufa_end=m4.id
					WHERE w4.id=w.id) as do_id,
	
					(SELECT m5.kod
					FROM SpsBundle:Wlokno w5
					LEFT JOIN SpsBundle:Kabel k5 with w5.id_kabel=k5.id
					LEFT JOIN SpsBundle:Mufa m5 with k5.id_mufa_end=m5.id
					WHERE w5.id=w.id) as do_kod
	
	
	
				FROM SpsBundle:Wlokno w
				LEFT JOIN SpsBundle:Kabel k  with k.id = w.id_kabel
				LEFT JOIN SpsBundle:Mufa m  with m.id = k.id_mufa_start
				LEFT JOIN SpsBundle:Standard s with s.id = k.id_standard
       	   WHERE w.id =:id_w
				AND m.id=:id_mufa
				'
		)->setParameter('id_w', $id_w)
		->setParameter('id_mufa', $id_mufa)
		;
		$w=$qb->getResult();
	
		return $w;
	
	}
	public function getFiberEnd($id_w,$id_mufa){
		
		
		$colorPos= $this->getNumberOfStandard($id_w);
		
		$qb = $this->getEntityManager()
		->createQuery(
				'SELECT 
					k.id,k.producent,k.j,k.tubs,
					s.nazwa as standard,
				
					(SELECT sz2.color'.$colorPos.' 
					FROM SpsBundle:Wlokno wz2  
					LEFT JOIN SpsBundle:Kabel kz2 with wz2.id_kabel=kz2.id
					LEFT JOIN SpsBundle:Standard sz2 with kz2.id_standard=sz2.id
					WHERE wz2.id=w.id) as s_color,
				
					(SELECT sz3.nazwa'.$colorPos.'
					FROM SpsBundle:Wlokno wz3  
					LEFT JOIN SpsBundle:Kabel kz3 with wz3.id_kabel=kz3.id
					LEFT JOIN SpsBundle:Standard sz3 with kz3.id_standard=sz3.id
					WHERE wz3.id=w.id) as s_nazwa,
				
					(SELECT count(ww.id)
					FROM SpsBundle:Wlokno ww
					LEFT JOIN SpsBundle:Kabel kk  with kk.id = ww.id_kabel
					WHERE kk.id =k.id
					AND ww.id<=:id_w) as w_pos,
				
					(SELECT wq3.id 
					FROM SpsBundle:Wlokno wq3  
					LEFT JOIN SpsBundle:Kabel kq3 with wq3.id_kabel=kq3.id
					LEFT JOIN SpsBundle:Mufa mq3 with kq3.id_mufa_end=mq3.id
					WHERE wq3.id=w.id) as od_id_w,
				
				
					(SELECT m1.id
					FROM SpsBundle:Wlokno w1  
					LEFT JOIN SpsBundle:Kabel k1 with w1.id_kabel=k1.id
					LEFT JOIN SpsBundle:Mufa m1 with k1.id_mufa_end=m1.id
					WHERE w1.id=w.id) as od_id, 
		
					(SELECT m2.kod 
					FROM SpsBundle:Wlokno w2  
					LEFT JOIN SpsBundle:Kabel k2 with w2.id_kabel=k2.id
					LEFT JOIN SpsBundle:Mufa m2 with k2.id_mufa_end=m2.id
					WHERE w2.id=w.id) as od_kod, 
				
					(SELECT k3.lenght 
					FROM SpsBundle:Wlokno w3  
					LEFT JOIN SpsBundle:Kabel k3 with w3.id_kabel=k3.id
					LEFT JOIN SpsBundle:Mufa m3 with k3.id_mufa_end=m3.id
					WHERE w3.id=w.id) as od_lenght ,
				
				
					(SELECT wq5.id
					FROM SpsBundle:Wlokno wq5  
					LEFT JOIN SpsBundle:Kabel kq5 with wq5.id_kabel=kq5.id
					LEFT JOIN SpsBundle:Mufa mq5 with kq5.id_mufa_start=mq5.id
					WHERE wq5.id=w.id_spaw_start) as do_id_w,
				
					(SELECT m4.id
					FROM SpsBundle:Wlokno w4  
					LEFT JOIN SpsBundle:Kabel k4 with w4.id_kabel=k4.id
					LEFT JOIN SpsBundle:Mufa m4 with k4.id_mufa_start=m4.id
					WHERE w4.id=w.id) as do_id,
				
					(SELECT m5.kod
					FROM SpsBundle:Wlokno w5  
					LEFT JOIN SpsBundle:Kabel k5 with w5.id_kabel=k5.id
					LEFT JOIN SpsBundle:Mufa m5 with k5.id_mufa_start=m5.id
					WHERE w5.id=w.id) as do_kod
				
				
				
				FROM SpsBundle:Wlokno w
				LEFT JOIN SpsBundle:Kabel k  with k.id = w.id_kabel
				LEFT JOIN SpsBundle:Mufa m  with m.id = k.id_mufa_end
				LEFT JOIN SpsBundle:Standard s with s.id =k.id_standard
       	   WHERE w.id =:id_w
				AND m.id=:id_mufa
				'
		)->setParameter('id_w', $id_w)
		->setParameter('id_mufa', $id_mufa)
		;
		$w=$qb->getResult();
		
		return $w;
		
	}

	public function isMufaStart($id_w,$id_mufa){
		
		
		$qb = $this->getEntityManager()
		->createQuery(
				'SELECT w.id
				FROM SpsBundle:Wlokno w
				LEFT JOIN SpsBundle:Kabel k  with k.id = w.id_kabel
				LEFT JOIN SpsBundle:Mufa m  with m.id = k.id_mufa_start
       	   WHERE w.id =:id_w
				AND m.id=:id_mufa
				'
		)->setParameter('id_w', $id_w)
		->setParameter('id_mufa', $id_mufa)
		;
		$w=$qb->getResult();
	
		if ($w!=null){
			return true;
		
		}else{
			return false;
		}
		
	}
	
	
	// TODO : wszystko w jednym zapytaniu 
	public function newGetWloknaStart($id_kabel,$id_mufa){
		$qb = $this->getEntityManager()
		->createQuery(
				'SELECT
				
				
					(SELECT kl.id FROM SpsBundle:Wlokno wl  
					LEFT JOIN SpsBundle:Kabel kl with wl.id_kabel=kl.id
					WHERE wl.id=w.id) as id_kabel_lewa,
				
					(SELECT m1.id FROM SpsBundle:Wlokno w1  
					LEFT JOIN SpsBundle:Kabel k1 with w1.id_kabel=k1.id
					LEFT JOIN SpsBundle:Mufa m1  with k1.id_mufa_end=m1.id
					WHERE w1.id=w.id) as id_end_lewa,
				
					(SELECT m2.kod FROM SpsBundle:Wlokno w2  
					LEFT JOIN SpsBundle:Kabel k2 with w2.id_kabel=k2.id
					LEFT JOIN SpsBundle:Mufa m2  with k2.id_mufa_end=m2.id
					WHERE w2.id=w.id) as kod_end_lewa,
				
				
					(SELECT kk2.j FROM SpsBundle:Wlokno ww2  
					LEFT JOIN SpsBundle:Kabel kk2 with ww2.id_kabel=kk2.id
					WHERE ww2.id=w.id) as j_end_lewa,
				
					(SELECT kk3.producent FROM SpsBundle:Wlokno ww3  
					LEFT JOIN SpsBundle:Kabel kk3 with ww3.id_kabel=kk3.id
					WHERE ww3.id=w.id) as producent_end_lewa,
				
					(SELECT kk4.tubs FROM SpsBundle:Wlokno ww4  
					LEFT JOIN SpsBundle:Kabel kk4 with ww4.id_kabel=kk4.id
					WHERE ww4.id=w.id) as tubs_end_lewa,
					
					(SELECT m4.id FROM SpsBundle:Wlokno w4  
					LEFT JOIN SpsBundle:Kabel k4 with w4.id_kabel=k4.id
					LEFT JOIN SpsBundle:Mufa m4  with k4.id_mufa_start=m4.id
					WHERE w4.id=w.id) as id_start_lewa,
				
					(SELECT m3.kod FROM SpsBundle:Wlokno w3  
					LEFT JOIN SpsBundle:Kabel k3 with w3.id_kabel=k3.id
					LEFT JOIN SpsBundle:Mufa m3  with k3.id_mufa_start=m3.id
					WHERE w3.id=w.id) as kod_start_lewa,
					
					w.id as id_w_lewa,
				   
					(SELECT w5.id FROM SpsBundle:Wlokno w5
					WHERE w5.id =w.id_spaw_start) as id_w_prawa,
				
					
					(SELECT m6.id FROM SpsBundle:Wlokno w6  
					LEFT JOIN SpsBundle:Kabel k6 with w6.id_kabel=k6.id
					LEFT JOIN SpsBundle:Mufa m6  with k6.id_mufa_end=m6.id
					WHERE w6.id=w.id_spaw_start) as id_start_prawa,
				
					(SELECT m7.kod FROM SpsBundle:Wlokno w7  
					LEFT JOIN SpsBundle:Kabel k7 with w7.id_kabel=k7.id
					LEFT JOIN SpsBundle:Mufa m7  with k7.id_mufa_end=m7.id
					WHERE w7.id=w.id_spaw_start) as kod_start_prawa,
				
					(SELECT kk7.producent FROM SpsBundle:Wlokno ww7  
					LEFT JOIN SpsBundle:Kabel kk7 with ww7.id_kabel=kk7.id
					WHERE ww7.id=w.id_spaw_start) as producent_start_prawa,
				
					(SELECT kk8.j FROM SpsBundle:Wlokno ww8  
					LEFT JOIN SpsBundle:Kabel kk8 with ww8.id_kabel=kk8.id
					WHERE ww8.id=w.id_spaw_start) as j_start_prawa,
				
					(SELECT kk9.tubs FROM SpsBundle:Wlokno ww9  
					LEFT JOIN SpsBundle:Kabel kk9 with ww9.id_kabel=kk9.id
					WHERE ww9.id=w.id_spaw_start) as tubs_start_prawa,
				
				
					(SELECT m8.id FROM SpsBundle:Wlokno w8  
					LEFT JOIN SpsBundle:Kabel k8 with w8.id_kabel=k8.id
					LEFT JOIN SpsBundle:Mufa m8  with k8.id_mufa_end=m8.id
					WHERE w8.id_spaw_end=w.id_spaw_start) as id_end_prawa,
					
				
					(SELECT m9.kod FROM SpsBundle:Wlokno w9  
					LEFT JOIN SpsBundle:Kabel k9 with w9.id_kabel=k9.id
					LEFT JOIN SpsBundle:Mufa m9  with k9.id_mufa_end=m9.id
					WHERE w9.id_spaw_end=w.id_spaw_start) as kod_end_prawa,
				
					(SELECT kr.id FROM SpsBundle:Wlokno wr  
					LEFT JOIN SpsBundle:Kabel kr with wr.id_kabel=kr.id
					WHERE wr.id_spaw_end=w.id_spaw_start) as id_kabel_prawa
					
				
					
				
				
					
				
				FROM SpsBundle:Wlokno w
				LEFT JOIN SpsBundle:Kabel k  with k.id = w.id_kabel
       	   WHERE k.id =:id_kabel
				AND k.id_mufa_start=:id_mufa
				
	
				'
		)->setParameter('id_kabel', $id_kabel)
		->setParameter('id_mufa', $id_mufa)
		;

		return $qb->getResult();
	}
	
	
	public function getWloknaStart($id_kabel,$id_mufa){
		$qb = $this->getEntityManager()
		->createQuery(
				'SELECT w.id,IDENTITY (w.id_spaw_start) as id_spaw
				FROM SpsBundle:Wlokno w
				LEFT JOIN SpsBundle:Kabel k  with k.id = w.id_kabel
       	   WHERE k.id =:id_kabel
				AND k.id_mufa_start=:id_mufa
				
	
				'
		)->setParameter('id_kabel', $id_kabel)
		->setParameter('id_mufa', $id_mufa)
		;
	
		return $qb->getResult();
	}
	
	public function getWloknaEnd($id_kabel,$id_mufa){
		$qb = $this->getEntityManager()
		->createQuery(
				'SELECT w.id,IDENTITY (w.id_spaw_end) as id_spaw
				FROM SpsBundle:Wlokno w
				LEFT JOIN SpsBundle:Kabel k  with k.id = w.id_kabel
       	   WHERE k.id =:id_kabel
				AND k.id_mufa_end=:id_mufa
		
	
				'
		)->setParameter('id_kabel', $id_kabel)
		->setParameter('id_mufa', $id_mufa)
		->getResult()
		;
	
		return $qb;
	}
	private static  function normalizeColor($pos,$max){
		
		if ($pos>$max){
			$newPos=$pos-$max;
			
			return WloknoRepository::normalizeColor($newPos, $max);
			
		}else if ($pos<=$max){
		
			
			return strval($pos);
		}
	}
	
	public function  getSpawEndFromId($id){
		

		
		
		$colorPos=$this->getNumberOfStandard($id);
		

		$qb = $this->getEntityManager()
		
		->createQuery(
	
				'SELECT
				 k.id as id_k,w.id as id_w,m.kod,k.j,k.tubs,k.producent,
				 m.id as id_mufa,
		
				IDENTITY (k.id_mufa_start) as mufa_end,
					(SELECT count(ww.id)
					FROM SpsBundle:Wlokno ww
					LEFT JOIN SpsBundle:Kabel kk  with kk.id = ww.id_kabel
					WHERE kk.id =k.id
					AND ww.id<=:id) as w_pos,
				s.color'.$colorPos.' as color,
				s.nazwa'.$colorPos.' as color_n,
				s.nazwa as standard
	
				FROM SpsBundle:Wlokno w
				LEFT JOIN SpsBundle:Kabel k  with k.id = w.id_kabel
				LEFT JOIN SpsBundle:Mufa m with k.id_mufa_end =m.id
				LEFT JOIN SpsBundle:Standard s with k.id_standard= s.id
       	   WHERE w.id =:id'
		)->setParameter('id',$id);
	
	
		$x=$qb->getResult();
	
	
	
		//return $x['0']['kod'];
		return  $x;
	
	
	}
	
	
	public function  getSpawStartFromId($id){
		
		$colorPos=$this->getNumberOfStandard($id);
		
		$qb = $this->getEntityManager()
		->createQuery(
				
				'SELECT 
				k.id as id_k,w.id as id_w,m.kod,
				m.id as id_mufa,
				k.producent,
				k.j,k.tubs,
				IDENTITY (k.id_mufa_end) as mufa_end,
				(SELECT count(ww.id)
					FROM SpsBundle:Wlokno ww
					LEFT JOIN SpsBundle:Kabel kk  with kk.id = ww.id_kabel
					WHERE kk.id =k.id
					AND ww.id<=:id) as w_pos,
				s.color'.$colorPos.' as color,
				s.nazwa'.$colorPos.' as color_n,
				s.nazwa as standard
				
				FROM SpsBundle:Wlokno w
				LEFT JOIN SpsBundle:Kabel k  with k.id = w.id_kabel
				LEFT JOIN SpsBundle:Mufa m with k.id_mufa_start =m.id
				LEFT JOIN SpsBundle:Standard s with k.id_standard= s.id
       	   WHERE w.id =:id'
		)->setParameter('id',$id);
		
		$x=$qb->getResult();
	
		//return $x['0']['kod'];
			return  $x;
	

	}
	
	
	public function  getFiberPosition($id){
	
			
		$qb = $this->getEntityManager()
		->createQuery('
			SELECT count(w.id), s.max
		FROM SpsBundle:Wlokno w
		LEFT JOIN SpsBundle:Kabel k  with k.id = w.id_kabel
		LEFT JOIN SpsBundle:Standard s with k.id_standard= s.id
		WHERE k.id =(SELECT IDENTITY(ww.id_kabel) FROM SpsBundle:Wlokno ww  WHERE ww.id=:id)
		AND w.id<=:id'			
	)->setParameter('id',$id);
		
		
	return  $qb->getResult();
	}
	
	
	
	
	public function getNumberOfStandard($id_w){
		
		

		$qb = $this->getEntityManager()
		
		->createQuery(
		
				'SELECT
					(SELECT count(ww.id)
					FROM SpsBundle:Wlokno ww
					LEFT JOIN SpsBundle:Kabel kk  with kk.id = ww.id_kabel
					WHERE kk.id =k.id
					AND ww.id<=:id) as w_pos,
				s.max
				FROM SpsBundle:Wlokno w
				LEFT JOIN SpsBundle:Kabel k  with k.id = w.id_kabel
				LEFT JOIN SpsBundle:Mufa m with k.id_mufa_end =m.id
				LEFT JOIN SpsBundle:Standard s with k.id_standard= s.id
       	   WHERE w.id =:id'
		)->setParameter('id',$id_w);
		
		
		$w=$qb->getResult();
	return 	$colorPos=$this->normalizeColor($w[0]['w_pos'],$w[0]['max']);
	}
	
	
	
	/// /??? 
	
	public function  getFiberColor($id_count){
	
			
		$qb = $this->getEntityManager()
		->createQuery('
			SELECT s.color'.$id_count.' as color,s.nazwa'.$id_count.' as nazwa
		FROM SpsBundle:Standard s'
		
		)->getResult();
		
		
		return  $qb;
	}
	
}
