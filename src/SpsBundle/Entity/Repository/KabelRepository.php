<?php

namespace SpsBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * KabelRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class KabelRepository extends EntityRepository {
	
	
	// TODO : ??? 
	public function getGpFromMufaAKabel($kabel, $mufa) {
		$qb = "SELECT 
			(SELECT m.gps_e FROM mufa m WHERE m.id=k.id_mufa_start) as gps_e
			
			FROM kabel k 
			where k.id_mufa_start = 10 OR  k.id_mufa_end =10";
	}
	
	
public function getKable() {
		$qb = $this->getEntityManager ()->createQuery ( "
				SELECT
						k.j,
						k.id,
						k.lenght,
						k.producent,
						k.standard,
						k.tubs,
				(SELECT m.kod FROM SpsBundle:Mufa m WHERE m.id=k.id_mufa_start) as kod_start,
				(SELECT mm.kod FROM SpsBundle:Mufa mm WHERE mm.id= k.id_mufa_end) as kod_end
			
				FROM SpsBundle:Kabel k
				 
				
				" )->getResult ();
		
		return $qb;
	}
	
	public function getGps($id_rejon) {
		$qb = $this->getEntityManager ()->createQuery ( "SELECT
				 m.gps_n, m.gps_e, m.kod, m.id, m.opis,
				
				(SELECT mm.gps_e FROM SpsBundle:Mufa mm WHERE mm.id=k.id_mufa_start) as start_e,
				(SELECT mmm.gps_n FROM SpsBundle:Mufa mmm WHERE mmm.id= k.id_mufa_start) as start_n,
				(SELECT Qmm.gps_e FROM SpsBundle:Mufa Qmm WHERE Qmm.id=k.id_mufa_end) as end_e,
				(SELECT Qmmm.gps_n FROM SpsBundle:Mufa Qmmm WHERE Qmmm.id= k.id_mufa_end) as end_n
		
				FROM SpsBundle:Kabel k
				LEFT JOIN SpsBundle:Mufa m
					with  m.id = k.id_mufa_end
				LEFT JOIN SpsBundle:Rejon r 
					with  r.id = m.id_rejon
            WHERE r.id = :id	
				" )->setParameter ( 'id', $id_rejon )->getResult ();
		
		return $qb;
	}
	// TODO : doctrine nie wspiera UNION, jak bedzie chwila pokobinowac w jedno zapytanie
	public function getGpsFristStart($id_rejon) {
		$qb = $this->getEntityManager ()->createQuery ( "SELECT
				 m.gps_n, m.gps_e, m.kod, m.id, m.opis,
	
				(SELECT mm.gps_e FROM SpsBundle:Mufa mm WHERE mm.id=k.id_mufa_start) as start_e,
				(SELECT mmm.gps_n FROM SpsBundle:Mufa mmm WHERE mmm.id= k.id_mufa_start) as start_n,
				(SELECT Qmm.gps_e FROM SpsBundle:Mufa Qmm WHERE Qmm.id=k.id_mufa_end) as end_e,
				(SELECT Qmmm.gps_n FROM SpsBundle:Mufa Qmmm WHERE Qmmm.id= k.id_mufa_end) as end_n
	
				FROM SpsBundle:Kabel k
				LEFT JOIN SpsBundle:Mufa m
					with  m.id = k.id_mufa_start
				LEFT JOIN SpsBundle:Rejon r
					with  r.id = m.id_rejon
            WHERE r.id = :id
				
				" )->setParameter ( 'id', $id_rejon )->setMaxResults ( 1 )->getResult ();
		
		return $qb;
	}
	
	public function newGetKableFromRejon($id_rejon,$tag) {
	
	
		$qb = $this->getEntityManager ()->createQuery ( "SELECT
				k.j,
				k.id,
				k.lenght,
				k.producent,
				k.standard,
				k.tubs,
				(SELECT mm.kod FROM SpsBundle:Mufa mm WHERE mm.id=k.id_mufa_start) as kod_start,
				(SELECT mmm.kod FROM SpsBundle:Mufa mmm WHERE mmm.id=k.id_mufa_end) as kod_end,
				(SELECT mz.id FROM SpsBundle:Mufa mz WHERE mz.id=k.id_mufa_start) as id_start,
				(SELECT mzz.id FROM SpsBundle:Mufa mzz WHERE mzz.id=k.id_mufa_end) as id_end
				FROM SpsBundle:Kabel k
				LEFT JOIN SpsBundle:Mufa m with  m.id= k.id_mufa_start
                LEFT JOIN SpsBundle:Rejon r with  r.id= m.id_rejon
					LEFT JOIN SpsBundle:ObjectTyp ot with ot.id = k.id_object_type
                WHERE r.id = :id AND ot.name=:tag
				ORDER BY r.id" )->setParameter ( 'id', $id_rejon )
					->setParameter ( 'tag', $tag );
	
		try {
				
			$result = $qb->getResult ();
				
			return $result;
		} catch ( \Doctrine\ORM\NoResultException $e ) {
			return null;
		}
	}
	
	/*
	 * @deprecated use {@link #newGetKableFromRejon()} instead.  
	 */
	
	public function getKableFromRejon($id_rejon,$tag) {
		
		
		$qb = $this->getEntityManager ()->createQuery ( "SELECT
						k.j,
						k.id,
						k.lenght,
						k.producent,
						k.standard,
						k.tubs
				FROM SpsBundle:Kabel k
				LEFT JOIN SpsBundle:Mufa m with  m.id= k.id_mufa_start
                LEFT JOIN SpsBundle:Rejon r with  r.id= m.id_rejon
					LEFT JOIN SpsBundle:ObjectTyp ot with ot.id = k.id_object_type
                WHERE r.id = :id AND ot.name=:tag
				ORDER BY r.id" )->setParameter ( 'id', $id_rejon )
									->setParameter ( 'tag', $tag );
		
		try {
			
			$result = $qb->getResult ();
			
			return $result;
		} catch ( \Doctrine\ORM\NoResultException $e ) {
			return null;
		}
	}
	// TODO : dpctrine nie lubi FK, jak bedzie czas pogrzebac w api
	public function getId_mufa_endFromRejon($id_rejon,$tag) {
		$qb = $this->getEntityManager ()->createQuery ( 'SELECT
						IDENTITY (k.id_mufa_end) as id_end
				FROM SpsBundle:Kabel k
				LEFT JOIN SpsBundle:Mufa m with  m.id= k.id_mufa_start
            LEFT JOIN SpsBundle:Rejon r with  r.id= m.id_rejon
				LEFT JOIN SpsBundle:ObjectTyp t with k.id_object_type=t.id
           WHERE r.id = :id AND t.name=:tag
         
				ORDER BY r.id' )->setParameter ( 'id', $id_rejon )
				->setParameter ( 'tag', $tag );
		
		try {
			return $qb->getScalarResult ();
		} catch ( \Doctrine\ORM\NoResultException $e ) {
			return null;
		}
	}
	public function getId_mufa_startFromRejon($id_rejon,$tag) {
		$qb = $this->getEntityManager ()->createQuery ( 'SELECT
						IDENTITY (k.id_mufa_start) as id_start
						FROM SpsBundle:Kabel k
						LEFT JOIN SpsBundle:Mufa m with  m.id= k.id_mufa_start
               	LEFT JOIN SpsBundle:Rejon r with  r.id= m.id_rejon
           			LEFT JOIN SpsBundle:ObjectTyp t with k.id_object_type=t.id
						
                WHERE r.id = :id AND t.name=:tag
						
						ORDER BY r.id'
				 )->setParameter ( 'id', $id_rejon )
				 ->setParameter ( 'tag', $tag )
				
				;
		
		try {
			return $qb->getScalarResult ();
		} catch ( \Doctrine\ORM\NoResultException $e ) {
			return null;
		}
	}
}
